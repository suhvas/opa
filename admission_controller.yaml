---
# Source: opa/templates/mgmt-rbac.yaml - Suhas Done
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: opa-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
  - kind: Group
    name: system:serviceaccounts:opa
    apiGroup: rbac.authorization.k8s.io
---
# Source: opa/templates/mgmt-rbac.yaml - Suhas Done
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: opa-configmap-modifier
  namespace: opa
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: configmap-modifier
subjects:
  - kind: Group
    name: system:serviceaccounts:opa
    apiGroup: rbac.authorization.k8s.io
---
# Source: opa/templates/mgmt-rbac.yaml Suhas Done
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: configmap-modifier
  namespace: opa
rules:
  - verbs: ["update","patch"]
    apiGroups: ["*"]
    resources: ["configmaps"]
---
# Source: opa/templates/service.yaml Suhas Done
kind: Service
apiVersion: v1
metadata:
  name: opa
  namespace: opa
  labels:
    app: opa
spec:
  selector:
    app: opa
  ports:
  - name: https
    protocol: TCP
    port: 443
    targetPort: 8443
---
# Source: opa/templates/deployment.yaml Suhas Done
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opa
  labels:
    app: opa
  namespace: opa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opa
  template:
    metadata:
      labels:
        app: opa
      name: opa
    spec:
      containers:
        - name: opa
          image: openpolicyagent/opa:0.32.0-rootless
          imagePullPolicy: Always
          args:
            - "run"
            - "--server"
            - "--tls-cert-file=/certs/tls.crt"
            - "--tls-private-key-file=/certs/tls.key"
            - "--addr=0.0.0.0:8443"
            - "--log-level=debug"
            - "--log-format=json-pretty"
            - "--addr=http://127.0.0.1:8181"
            - "--set=decision_logs.console=true"
          volumeMounts:
            - name: opa-server
              readOnly: true
              mountPath: /certs
          readinessProbe:
            httpGet:
              path: /health
              scheme: HTTPS
              port: 8443
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              scheme: HTTPS
              port: 8443
            initialDelaySeconds: 10
            periodSeconds: 15
        - name: kube-mgmt
          image: openpolicyagent/kube-mgmt:0.11
          imagePullPolicy: Always
          args:
            - "--replicate-cluster=v1/namespaces"
            - "--replicate=extensions/v1beta1/ingresses"
      volumes:
        - name: opa-server
          secret:
            secretName: opa-server
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: opa-default-system-main
  namespace: opa
data:
  main: |
    package system

    import data.kubernetes.admission

    main = {
      "apiVersion": "admission.k8s.io/v1",
      "kind": "AdmissionReview",
      "response": response,
    }

    default uid = ""

    uid = input.request.uid

    default response = {"allowed": true}

    response = {
        "allowed": false,
        "uid": uid,
        "status": {
            "reason": reason,
        },
    } {
        reason = concat(", ", admission.deny)
        reason != ""
    }
    else = {"allowed": true, "uid": uid}
---

